planning_plugin: ompl_interface/OMPLPlanner
request_adapters: >-
  default_planner_request_adapters/AddTimeOptimalParameterization
  default_planner_request_adapters/ConstraintAwarePlanner
  default_planner_request_adapters/ComputeConstraintFrames
  default_planner_request_adapters/FixWorkspaceBounds
  default_planner_request_adapters/FixStartStateBounds
  default_planner_request_adapters/FixStartStateCollision
  default_planner_request_adapters/FixStartStatePathConstraints
start_state_max_bounds_error: 0.1
planner_configs:
  SBLConfigDefault:
    type: geometric::SBL
    range: 0.0  # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
  ESTConfigDefault:
    type: geometric::EST
    range: 0.0  # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0 setup()
    goal_bias: 0.05  # When close to goal select goal, with this probability. default: 0.05
  LBKPIECEConfigDefault:
    type: geometric::LBKPIECE
    range: 0.0  # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
    border_fraction: 0.9  # Fraction of time focused on border default: 0.9
    min_valid_path_fraction: 0.5  # Accept partially valid moves above fraction. default: 0.5
  BKPIECEConfigDefault:
    type: geometric::BKPIECE
    range: 0.0  # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
    border_fraction: 0.9  # Fraction of time focused on border default: 0.9
    failed_expansion_score_factor: 0.5  # When extending motion fails, scale score by factor. default: 0.5
    min_valid_path_fraction: 0.5  # Accept partially valid moves above fraction. default: 0.5
  KPIECEConfigDefault:
    type: geometric::KPIECE
    range: 0.0  # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
    goal_bias: 0.05  # When close to goal select goal, with this probability. default: 0.05
    border_fraction: 0.9  # Fraction of time focused on border default: 0.9
    failed_expansion_score_factor: 0.5  # When extending motion fails, scale score by factor. default: 0.5
    min_valid_path_fraction: 0.5  # Accept partially valid moves above fraction. default: 0.5
  RRTConfigDefault:
    type: geometric::RRT
    range: 0.0  # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
    goal_bias: 0.05  # When close to goal select goal, with this probability? default: 0.05
  RRTConnectConfigDefault:
    type: geometric::RRTConnect
    range: 0.0  # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
  RRTstarConfigDefault:
    type: geometric::RRTstar
    range: 0.0  # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
    goal_bias: 0.05  # When close to goal select goal, with this probability? default: 0.05
    delay_collision_checking: 1  # Stop collision checking as soon as C-free parent found. default 1
  TRRTConfigDefault:
    type: geometric::TRRT
    range: 0.0  # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
    goal_bias: 0.05  # When close to goal select goal, with this probability? default: 0.05
    max_states_failed: 10  # When to start increasing temp. default: 10
    temp_change_factor: 2.0  # How much to increase or decrease temp. default: 2.0
    min_temperature: 10e-10  # Lower limit of temp change. default: 10e-10
    init_temperature: 10e-6  # Initial temperature. default: 10e-6
    frontier_threshold: 0.0  # Distance new state to nearest neighbor to disqualify as frontier. default: 0.0 set in setup()
    frontierNodeRatio: 0.1  # 1/10, or 1 nonfrontier for every 10 frontier. default: 0.1
    k_constant: 0.0  # Value used to normalize expression. default: 0.0 set in setup()

  PRMConfigDefault:
    type: geometric::PRM
    max_nearest_neighbors: 10  # Use k nearest neighbors. default: 10

  PRMstarConfigDefault:
    type: geometric::PRMstar

  FMTConfigDefault:
    type: geometric::FMT
    num_samples: 1000  # Number of states that the planner should sample. default: 1000
    radius_multiplier: 1.1  # Multiplier used for the nearest neighbors search radius. default: 1.1
    nearest_k: 1  # Use Knearest strategy. default: 1
    cache_cc: 1  # Use collision checking cache. default: 1
    heuristics: 0  # Activate cost to go heuristics. default: 0
    extended_fmt: 1  # Activate the extended FMT*: adding new samples if planner does not finish successfully. default: 1

  BFMTConfigDefault:
    type: geometric::BFMT
    num_samples: 1000  # Number of states that the planner should sample. default: 1000
    radius_multiplier: 1.0  # Multiplier used for the nearest neighbors search radius. default: 1.0
    nearest_k: 1  # Use the Knearest strategy. default: 1
    balanced: 0  # Exploration strategy: balanced true expands one tree every iteration. False will select the tree with lowest maximum cost to go. default: 1
    optimality: 1  # Termination strategy: optimality true finishes when the best possible path is found. Otherwise, the algorithm will finish when the first feasible path is found. default: 1
    heuristics: 1  # Activates cost to go heuristics. default: 1
    cache_cc: 1  # Use collision checking cache. default: 1
    extended_fmt: 1  # Activates the extended FMT*: adding new samples if planner does not finish successfully. default: 1

  PDSTConfigDefault:
    type: geometric::PDST

  STRIDEConfigDefault:
    type: geometric::STRIDE
    range: 0.0  # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
    goal_bias: 0.05  # When close to goal select goal, with this probability. default: 0.05
    use_projected_distance: 0  # Whether nearest neighbors are computed based on distances in a projection of the state rather distances in the state space itself. default: 0
    degree: 16  # Desired degree of a node in the Geometric Near-neighbor Access Tree (GNAT). default: 16
    max_degree: 18  # Max degree of a node in the GNAT. default: 12
    min_degree: 12  # Min degree of a node in the GNAT. default: 12
    max_pts_per_leaf: 6  # Max points per leaf in the GNAT. default: 6
    estimated_dimension: 0.0  # Estimated dimension of the free space. default: 0.0
    min_valid_path_fraction: 0.2  # Accept partially valid moves above fraction. default: 0.2

  BiTRRTConfigDefault:
    type: geometric::BiTRRT
    range: 0.0  # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
    temp_change_factor: 0.1  # How much to increase or decrease temp. default: 0.1
    init_temperature: 100  # Initial temperature. default: 100
    frontier_threshold: 0.0  # Distance new state to nearest neighbor to disqualify as frontier. default: 0.0 set in setup()
    frontier_node_ratio: 0.1  # 1/10, or 1 nonfrontier for every 10 frontier. default: 0.1
    cost_threshold: 1e300  # The cost threshold. Any motion cost that is not better will not be expanded. default: inf

  LBTRRTConfigDefault:
    type: geometric::LBTRRT
    range: 0.0  # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
    goal_bias: 0.05  # When close to goal select goal, with this probability. default: 0.05

  BiESTConfigDefault:
    type: geometric::BiEST
    range: 0.0  # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()

  ProjESTConfigDefault:
    type: geometric::ProjEST
    range: 0.0  # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
    goal_bias: 0.05  # When close to goal select goal, with this probability. default: 0.05

  LazyPRMConfigDefault:
    type: geometric::LazyPRM
    range: 0.0  # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()

  LazyPRMstarConfigDefault:
    type: geometric::LazyPRMstar

  SPARSConfigDefault:
    type: geometric::SPARS
    stretch_factor: 3.0  # Roadmap spanner stretch factor. Multiplicative upper bound on path quality. It does not make sense to make this parameter more than 3. default: 3.0
    sparse_delta_fraction: 0.25  # Delta fraction for connection distance. This value represents the visibility range of sparse samples. default: 0.25
    dense_delta_fraction: 0.001  # Delta fraction for interface detection. default: 0.001
    max_failures: 1000  # Maximum consecutive failure limit. default: 1000

  SPARSWorkConfigDefault:
    type: geometric::SPARStwo
    stretch_factor: 3.0  # Roadmap spanner stretch factor. Multiplicative upper bound on path quality. It does not make sense to make this parameter more than 3. default: 3.0
    sparse_delta_fraction: 0.25  # Delta fraction for connection distance. This value represents the visibility range of sparse samples. default: 0.25
    dense_delta_fraction: 0.001  # Delta fraction for interface detection. default: 0.001
    max_failures: 5000  # Maximum consecutive failure limit. default: 5000

  ur5_manipulator:
    planner_configs:
      - SBLConfigDefault
      - ESTConfigDefault
      - LBKPIECEConfigDefault
      - BKPIECEConfigDefault
      - KPIECEConfigDefault
      - RRTConfigDefault
      - RRTConnectConfigDefault
      - RRTstarConfigDefault
      - PRMConfigDefault
      - PRMstarConfigDefault
      - FMTConfigDefault
      - BFMTConfigDefault
      - PDSTConfigDefault
      - STRIDEConfigDefault
      - BiTRRTConfigDefault
      - LBTRRTConfigDefault
      - BiESTConfigDefault
      - ProjESTConfigDefault
      - LazyPRMConfigDefault
      - LazyPRMstarConfigDefault
      - SPARSConfigDefault
      - TrajOptDefault
